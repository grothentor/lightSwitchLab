//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Data Services
    
    /// <summary>
    /// Предоставляет элементы для запроса и обновления данных в источнике данных ApplicationData.
    /// </summary>
    public sealed partial class ApplicationDataService
        : global::LightSwitchApplication.ApplicationData
    {
        #region Constructors
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ApplicationDataService() : base()
        {
        }
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Получает объект Application для данного приложения.  Объект Application предоставляет доступ к активным экранам, методы для открытых экранов и доступ к текущему пользователю.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Получает вмещающую рабочую область данных.  Рабочая область данных предоставляет доступ ко всем источникам данных в приложении.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Server Interceptions Points
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RoomSet_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RoomSet_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RoomSet_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RoomSet_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RoomSet_Inserting(global::LightSwitchApplication.Room entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RoomSet_Inserted(global::LightSwitchApplication.Room entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RoomSet_Updating(global::LightSwitchApplication.Room entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RoomSet_Updated(global::LightSwitchApplication.Room entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RoomSet_Deleting(global::LightSwitchApplication.Room entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RoomSet_Deleted(global::LightSwitchApplication.Room entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RoomSet_Validate(global::LightSwitchApplication.Room entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RoomSet_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Room, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ClientSet_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ClientSet_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ClientSet_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ClientSet_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ClientSet_Inserting(global::LightSwitchApplication.Client entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ClientSet_Inserted(global::LightSwitchApplication.Client entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ClientSet_Updating(global::LightSwitchApplication.Client entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ClientSet_Updated(global::LightSwitchApplication.Client entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ClientSet_Deleting(global::LightSwitchApplication.Client entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ClientSet_Deleted(global::LightSwitchApplication.Client entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ClientSet_Validate(global::LightSwitchApplication.Client entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ClientSet_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Client, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SettlementSet_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SettlementSet_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SettlementSet_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SettlementSet_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SettlementSet_Inserting(global::LightSwitchApplication.Settlement entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SettlementSet_Inserted(global::LightSwitchApplication.Settlement entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SettlementSet_Updating(global::LightSwitchApplication.Settlement entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SettlementSet_Updated(global::LightSwitchApplication.Settlement entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SettlementSet_Deleting(global::LightSwitchApplication.Settlement entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SettlementSet_Deleted(global::LightSwitchApplication.Settlement entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SettlementSet_Validate(global::LightSwitchApplication.Settlement entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SettlementSet_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Settlement, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SexSet_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SexSet_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SexSet_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SexSet_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SexSet_Inserting(global::LightSwitchApplication.Sex entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SexSet_Inserted(global::LightSwitchApplication.Sex entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SexSet_Updating(global::LightSwitchApplication.Sex entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SexSet_Updated(global::LightSwitchApplication.Sex entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SexSet_Deleting(global::LightSwitchApplication.Sex entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SexSet_Deleted(global::LightSwitchApplication.Sex entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SexSet_Validate(global::LightSwitchApplication.Sex entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SexSet_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Sex, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RoomTypeSet_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RoomTypeSet_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RoomTypeSet_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RoomTypeSet_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RoomTypeSet_Inserting(global::LightSwitchApplication.RoomType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RoomTypeSet_Inserted(global::LightSwitchApplication.RoomType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RoomTypeSet_Updating(global::LightSwitchApplication.RoomType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RoomTypeSet_Updated(global::LightSwitchApplication.RoomType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RoomTypeSet_Deleting(global::LightSwitchApplication.RoomType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RoomTypeSet_Deleted(global::LightSwitchApplication.RoomType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RoomTypeSet_Validate(global::LightSwitchApplication.RoomType entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RoomTypeSet_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.RoomType, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_Executed();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query1_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void Query1_Executing(global::System.Nullable<int> SexId);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query1_PreprocessQuery(global::System.Nullable<int> SexId, ref global::System.Linq.IQueryable<global::LightSwitchApplication.Client> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void Query1_Executed(global::System.Nullable<int> SexId, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Client> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void Query1_ExecuteFailed(global::System.Nullable<int> SexId, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query2_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void Query2_Executing(global::System.Nullable<int> IdRoomType);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query2_PreprocessQuery(global::System.Nullable<int> IdRoomType, ref global::System.Linq.IQueryable<global::LightSwitchApplication.Settlement> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void Query2_Executed(global::System.Nullable<int> IdRoomType, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Settlement> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void Query2_ExecuteFailed(global::System.Nullable<int> IdRoomType, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_Executing(global::Microsoft.LightSwitch.QueryExecutingDescriptor queryDescriptor);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_Executed(global::Microsoft.LightSwitch.QueryExecutedDescriptor queryDescriptor);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_ExecuteFailed(global::Microsoft.LightSwitch.QueryExecuteFailedDescriptor queryDescriptor);
    
        #endregion
    
        #region Details Class
    
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        public static new class DetailsClass
        {
    
            static DetailsClass()
            {
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Room>
                __RoomSetEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Room>(
                    "RoomSet",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__RoomSet_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__RoomSet_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__RoomSet_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__RoomSet_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__RoomSet_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__RoomSet_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__RoomSet_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__RoomSet_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__RoomSet_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__RoomSet_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__RoomSet_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__RoomSet_Filter);
            private static bool __RoomSet_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.RoomSet_CanInsert(ref result);
                return result;
            }
            private static bool __RoomSet_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.RoomSet_CanUpdate(ref result);
                return result;
            }
            private static bool __RoomSet_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.RoomSet_CanDelete(ref result);
                return result;
            }
            private static bool __RoomSet_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.RoomSet_CanRead(ref result);
                return result;
            }
            private static void __RoomSet_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Room e)
            {
                d.RoomSet_Inserting(e);
            }
            private static void __RoomSet_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Room e)
            {
                d.RoomSet_Inserted(e);
            }
            private static void __RoomSet_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Room e)
            {
                d.RoomSet_Updating(e);
            }
            private static void __RoomSet_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Room e)
            {
                d.RoomSet_Updated(e);
            }
            private static void __RoomSet_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Room e)
            {
                d.RoomSet_Deleting(e);
            }
            private static void __RoomSet_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Room e)
            {
                d.RoomSet_Deleted(e);
            }
            private static void __RoomSet_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Room e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.RoomSet_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Room, bool>> __RoomSet_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Room, bool>> filter = null;
                d.RoomSet_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Client>
                __ClientSetEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Client>(
                    "ClientSet",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ClientSet_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ClientSet_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ClientSet_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ClientSet_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ClientSet_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ClientSet_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ClientSet_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ClientSet_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ClientSet_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ClientSet_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ClientSet_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ClientSet_Filter);
            private static bool __ClientSet_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ClientSet_CanInsert(ref result);
                return result;
            }
            private static bool __ClientSet_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ClientSet_CanUpdate(ref result);
                return result;
            }
            private static bool __ClientSet_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ClientSet_CanDelete(ref result);
                return result;
            }
            private static bool __ClientSet_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ClientSet_CanRead(ref result);
                return result;
            }
            private static void __ClientSet_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Client e)
            {
                d.ClientSet_Inserting(e);
            }
            private static void __ClientSet_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Client e)
            {
                d.ClientSet_Inserted(e);
            }
            private static void __ClientSet_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Client e)
            {
                d.ClientSet_Updating(e);
            }
            private static void __ClientSet_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Client e)
            {
                d.ClientSet_Updated(e);
            }
            private static void __ClientSet_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Client e)
            {
                d.ClientSet_Deleting(e);
            }
            private static void __ClientSet_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Client e)
            {
                d.ClientSet_Deleted(e);
            }
            private static void __ClientSet_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Client e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.ClientSet_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Client, bool>> __ClientSet_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Client, bool>> filter = null;
                d.ClientSet_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Settlement>
                __SettlementSetEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Settlement>(
                    "SettlementSet",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SettlementSet_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SettlementSet_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SettlementSet_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SettlementSet_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SettlementSet_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SettlementSet_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SettlementSet_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SettlementSet_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SettlementSet_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SettlementSet_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SettlementSet_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SettlementSet_Filter);
            private static bool __SettlementSet_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.SettlementSet_CanInsert(ref result);
                return result;
            }
            private static bool __SettlementSet_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.SettlementSet_CanUpdate(ref result);
                return result;
            }
            private static bool __SettlementSet_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.SettlementSet_CanDelete(ref result);
                return result;
            }
            private static bool __SettlementSet_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.SettlementSet_CanRead(ref result);
                return result;
            }
            private static void __SettlementSet_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Settlement e)
            {
                d.SettlementSet_Inserting(e);
            }
            private static void __SettlementSet_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Settlement e)
            {
                d.SettlementSet_Inserted(e);
            }
            private static void __SettlementSet_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Settlement e)
            {
                d.SettlementSet_Updating(e);
            }
            private static void __SettlementSet_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Settlement e)
            {
                d.SettlementSet_Updated(e);
            }
            private static void __SettlementSet_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Settlement e)
            {
                d.SettlementSet_Deleting(e);
            }
            private static void __SettlementSet_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Settlement e)
            {
                d.SettlementSet_Deleted(e);
            }
            private static void __SettlementSet_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Settlement e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.SettlementSet_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Settlement, bool>> __SettlementSet_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Settlement, bool>> filter = null;
                d.SettlementSet_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Sex>
                __SexSetEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Sex>(
                    "SexSet",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SexSet_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SexSet_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SexSet_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SexSet_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SexSet_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SexSet_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SexSet_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SexSet_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SexSet_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SexSet_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SexSet_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SexSet_Filter);
            private static bool __SexSet_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.SexSet_CanInsert(ref result);
                return result;
            }
            private static bool __SexSet_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.SexSet_CanUpdate(ref result);
                return result;
            }
            private static bool __SexSet_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.SexSet_CanDelete(ref result);
                return result;
            }
            private static bool __SexSet_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.SexSet_CanRead(ref result);
                return result;
            }
            private static void __SexSet_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Sex e)
            {
                d.SexSet_Inserting(e);
            }
            private static void __SexSet_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Sex e)
            {
                d.SexSet_Inserted(e);
            }
            private static void __SexSet_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Sex e)
            {
                d.SexSet_Updating(e);
            }
            private static void __SexSet_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Sex e)
            {
                d.SexSet_Updated(e);
            }
            private static void __SexSet_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Sex e)
            {
                d.SexSet_Deleting(e);
            }
            private static void __SexSet_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Sex e)
            {
                d.SexSet_Deleted(e);
            }
            private static void __SexSet_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Sex e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.SexSet_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Sex, bool>> __SexSet_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Sex, bool>> filter = null;
                d.SexSet_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.RoomType>
                __RoomTypeSetEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.RoomType>(
                    "RoomTypeSet",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__RoomTypeSet_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__RoomTypeSet_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__RoomTypeSet_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__RoomTypeSet_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__RoomTypeSet_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__RoomTypeSet_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__RoomTypeSet_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__RoomTypeSet_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__RoomTypeSet_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__RoomTypeSet_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__RoomTypeSet_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__RoomTypeSet_Filter);
            private static bool __RoomTypeSet_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.RoomTypeSet_CanInsert(ref result);
                return result;
            }
            private static bool __RoomTypeSet_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.RoomTypeSet_CanUpdate(ref result);
                return result;
            }
            private static bool __RoomTypeSet_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.RoomTypeSet_CanDelete(ref result);
                return result;
            }
            private static bool __RoomTypeSet_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.RoomTypeSet_CanRead(ref result);
                return result;
            }
            private static void __RoomTypeSet_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.RoomType e)
            {
                d.RoomTypeSet_Inserting(e);
            }
            private static void __RoomTypeSet_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.RoomType e)
            {
                d.RoomTypeSet_Inserted(e);
            }
            private static void __RoomTypeSet_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.RoomType e)
            {
                d.RoomTypeSet_Updating(e);
            }
            private static void __RoomTypeSet_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.RoomType e)
            {
                d.RoomTypeSet_Updated(e);
            }
            private static void __RoomTypeSet_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.RoomType e)
            {
                d.RoomTypeSet_Deleting(e);
            }
            private static void __RoomTypeSet_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.RoomType e)
            {
                d.RoomTypeSet_Deleted(e);
            }
            private static void __RoomTypeSet_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.RoomType e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.RoomTypeSet_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.RoomType, bool>> __RoomTypeSet_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.RoomType, bool>> filter = null;
                d.RoomTypeSet_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.OperationEntry<global::LightSwitchApplication.ApplicationDataService>
                __SaveChangesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.OperationEntry<global::LightSwitchApplication.ApplicationDataService>(
                    "SaveChanges",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaveChanges_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaveChanges_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaveChanges_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaveChanges_Failed);
            private static bool __SaveChanges_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.SaveChanges_CanExecute(ref r);
                return r;
            }
            private static void __SaveChanges_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.SaveChanges_Executing();
            }
            private static void __SaveChanges_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.SaveChanges_Executed();
            }
            private static void __SaveChanges_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.SaveChanges_ExecuteFailed(ex);
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Client>
                __Query1Entry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Client>(
                    "Query1",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Query1_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Query1_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Query1_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Query1_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Query1_PreprocessQuery);
            private static bool __Query1_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.Query1_CanExecute(ref r);
                return r;
            }
            private static void __Query1_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Query1_Executing((global::System.Nullable<int>)args[0]);
            }
            private static void __Query1_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Query1_Executed((global::System.Nullable<int>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Client>)args[1]);
            }
            private static void __Query1_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.Query1_ExecuteFailed((global::System.Nullable<int>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __Query1_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Client> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Client>)args[1];
                d.Query1_PreprocessQuery((global::System.Nullable<int>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Settlement>
                __Query2Entry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Settlement>(
                    "Query2",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Query2_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Query2_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Query2_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Query2_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Query2_PreprocessQuery);
            private static bool __Query2_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.Query2_CanExecute(ref r);
                return r;
            }
            private static void __Query2_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Query2_Executing((global::System.Nullable<int>)args[0]);
            }
            private static void __Query2_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Query2_Executed((global::System.Nullable<int>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Settlement>)args[1]);
            }
            private static void __Query2_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.Query2_ExecuteFailed((global::System.Nullable<int>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __Query2_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Settlement> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Settlement>)args[1];
                d.Query2_PreprocessQuery((global::System.Nullable<int>)args[0], ref query);
                return query;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryEntry<global::LightSwitchApplication.ApplicationDataService>
                ___QueryEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryEntry<global::LightSwitchApplication.ApplicationDataService>(
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Query_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Query_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Query_Failed);
            private static void __Query_Executing(global::LightSwitchApplication.ApplicationDataService d, global::Microsoft.LightSwitch.QueryExecutingDescriptor queryDescriptor)
            {
                d.Query_Executing(queryDescriptor);
            }
            private static void __Query_Executed(global::LightSwitchApplication.ApplicationDataService d, global::Microsoft.LightSwitch.QueryExecutedDescriptor queryDescriptor)
            {
                d.Query_Executed(queryDescriptor);
            }
            private static void __Query_Failed(global::LightSwitchApplication.ApplicationDataService d, global::Microsoft.LightSwitch.QueryExecuteFailedDescriptor queryDescriptor)
            {
                d.Query_ExecuteFailed(queryDescriptor);
            }
        }
    
        #endregion
    }
    
    #endregion
}
